(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{604:function(t,a,s){"use strict";s.r(a);var n=s(11),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("全局执行上下文")]),t._v(" "),s("ul",[s("li",[t._v("在执行全局代码前将 window 确定为全局执行上下文")]),t._v(" "),s("li",[t._v("对全局数据进行预处理\n"),s("ul",[s("li",[s("code",[t._v("var")]),t._v("定义的全局变量==>"),s("code",[t._v("undefined")]),t._v(",添加为 window 的属性")]),t._v(" "),s("li",[t._v("function 声明的全局函数==>赋值,添加为 window 方法")]),t._v(" "),s("li",[t._v("this ==>赋值(window)")])])])])]),t._v(" "),s("li",[s("p",[t._v("函数执行上下文")]),t._v(" "),s("ul",[s("li",[t._v("在"),s("strong",[t._v("调用函数")]),t._v("前,准备执行函数体前,创建对应的"),s("span",{staticStyle:{"border-bottom":"2px solid blue"}},[t._v("函数执行上下文对象")]),t._v("(虚拟,存在于栈中)")]),t._v(" "),s("li",[t._v("对局部数据进行预处理\n"),s("ul",[s("li",[t._v("形参变量--\x3e赋值(实参)--\x3e添加为执行函数上下文的属性")]),t._v(" "),s("li",[t._v("arguments(伪数组) ==>赋值（实参列表）,添加为执行函数上下文的属性")]),t._v(" "),s("li",[s("code",[t._v("var")]),t._v("定义的局部变量==>"),s("code",[t._v("undefined")]),t._v("，添加为执行函数上下文的属性")]),t._v(" "),s("li",[s("code",[t._v("function")]),t._v("声明的函数==>赋值(fun), 添加为执行函数上下文的方法")]),t._v(" "),s("li",[t._v("this==>赋值(调用函数的对象)")])])]),t._v(" "),s("li",[t._v("开始执行代码")])])]),t._v(" "),s("li",[s("p",[t._v("Eval 函数执行上下文: 执行在"),s("code",[t._v("eval")]),t._v("函数内部的代码也会有属于自己的执行上下文。")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数提升优先于变量提升")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n")])])]),s("h2",{attrs:{id:"执行上下文栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文栈"}},[t._v("#")]),t._v(" 执行上下文栈")]),t._v(" "),s("ol",[s("li",[t._v("在全局代码执行前,"),s("code",[t._v("js")]),t._v("引擎就会创建一个栈来存储管理所有的执行上下文对象")]),t._v(" "),s("li",[t._v("在全局执行上下文(window)确定后,将其添加到栈中(压栈)")]),t._v(" "),s("li",[t._v("在函数执行上下文创建后,将其添加入栈中(压栈)")]),t._v(" "),s("li",[t._v("在函数执行完后,将栈顶的对象移除(出栈)")]),t._v(" "),s("li",[t._v("当所有的代码执行完后,栈中只剩 window")])]),t._v(" "),s("h2",{attrs:{id:"执行上下文的创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的创建"}},[t._v("#")]),t._v(" 执行上下文的创建")]),t._v(" "),s("blockquote",[s("p",[t._v("ES3 --\x3e ES6 作用域 --\x3e 词法环境 作用域链 --\x3e outer 引用 VO|AO --\x3e 环境记录")])]),t._v(" "),s("ul",[s("li",[t._v("创建阶段(The Creation Phase)执行环境的状态组件\n"),s("ol",[s("li",[t._v("创建词法环境("),s("code",[t._v("LexicalEnvironment")]),t._v(")")]),t._v(" "),s("li",[t._v("创建变量环境("),s("code",[t._v("VariableEnvironment")]),t._v(")")]),t._v(" "),s("li",[t._v("ThisBanding: 确定当前环境 this 的指向")])])])]),t._v(" "),s("p",[t._v("因此执行上下文在概念上应该是这样的")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("ExecutionContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*变量对象加上父级上下文的变量对象*/")]),t._v("\n  LexicalEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" to LexicalEnvironment "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*函数的参数,内部的方法变量声明*/")]),t._v("\n  VariableEnvironment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ref"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" to VariableEnvironment "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ThisBinding "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"词法环境-lexicalenvironment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法环境-lexicalenvironment"}},[t._v("#")]),t._v(" 词法环境(LexicalEnvironment)")]),t._v(" "),s("p",[t._v("词法环境是 ECMA 中的一个规范类型 --基于代码词汇嵌套结构来记录标识符 和具体变量或函数的关联。简单来说，词法环境就是建立了标识符--变量的映射表。这里的标识符指的是变量名称或函数名，而变量则是实际变量原始值或对象、函数的引用地址。")]),t._v(" "),s("p",[t._v("词法环境中由两个个部分组成")]),t._v(" "),s("ul",[s("li",[t._v("环境记录"),s("code",[t._v("EnvironmentRecord")]),t._v(": 存放变量和函数声明的地方")]),t._v(" "),s("li",[t._v("外层调用"),s("code",[t._v("outer")]),t._v(": 提供了访问父词法环境的引用,可能为 null")])]),t._v(" "),s("h3",{attrs:{id:"词法环境的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法环境的类型"}},[t._v("#")]),t._v(" 词法环境的类型")]),t._v(" "),s("ul",[s("li",[t._v("全局环境("),s("code",[t._v("GlobalEnvironment")]),t._v("): 在 JavaScript 代码运行开始宿主（浏览器，node 等）会事先初始化全局环境，在全局环境的"),s("code",[t._v("EnvironmentRecord")]),t._v("中会绑定内置对象(Infinity 等)或全局函数(eval、parseInt 等)，其他声明的全局变量或函数也会储存在全局词法变量中。全局环境的"),s("code",[t._v("outer")]),t._v("引用为"),s("code",[t._v("null")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("全局对象包含所有内置对象，如 Math、Object、Array 等构造函数，以及 Infinity 等全局变量。全局函数则包含了 eval、parseInt 等函数。")])]),s("ul",[s("li",[t._v("模块环境("),s("code",[t._v("ModuleEnvironment")]),t._v("): 在模块环境中可以读取到"),s("code",[t._v("export")]),t._v("、"),s("code",[t._v("module")]),t._v("等变量, 这些变量都记录在模块环境的 ER 中。模块环境的"),s("code",[t._v("outer")]),t._v("引用指向全局环境。")]),t._v(" "),s("li",[t._v("函数环境("),s("code",[t._v("FunctionEnvironment")]),t._v("): 每一次调用函数时都会产生函数环境, 在函数环境中会涉及"),s("code",[t._v("this")]),t._v("的绑定或者"),s("code",[t._v("super")]),t._v("的调用.在 ER 中也会记录该函数的"),s("code",[t._v("length")]),t._v("和"),s("code",[t._v("arguments")]),t._v("属性。函数环境的"),s("code",[t._v("outer")]),t._v("引用指向调用函数的父环境。在函数体内声明的变量或声明记录在函数环境中")])]),t._v(" "),s("h3",{attrs:{id:"环境记录-er"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境记录-er"}},[t._v("#")]),t._v(" 环境记录 ER")]),t._v(" "),s("p",[t._v("代码中声明的变量和函数都会存放在"),s("code",[t._v("EnvironmentRecord")]),t._v("中等待执行时访问。ER 也有两个不同类型，分别是"),s("code",[t._v("declarative")]),t._v("和"),s("code",[t._v("object")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("declarative")]),t._v("是较常见的类型，通常函数声明、变量声明，try...catch 等都会生成这种类型的 ER。此类型对应其范围内包含的声明定义的标识符集。")]),t._v(" "),s("li",[s("code",[t._v("object")]),t._v("类型可以由程序级别的（program）对象，声明，"),s("code",[t._v("with")]),t._v("语句（使用场景很少）等触发，与称为其绑定对象的对象相关联，此类型对应其绑定对象的属性名称的字符串标识符名称集")])]),t._v(" "),s("p",[t._v("在函数体中遇到诸如"),s("code",[t._v("var const let class module import")]),t._v("等函数声明，那么环境记录就是"),s("code",[t._v("declarative")]),t._v("类型的")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"title"},[t._v("注意")]),s("p",[t._v("全局上下文的"),s("code",[t._v("ER")]),t._v("有点特殊,因为它是"),s("code",[t._v("object ER")]),t._v("和"),s("code",[t._v("declarative ER")]),t._v("的混合体。在"),s("code",[t._v("object ER")]),t._v("中存放的是全局对象函数、"),s("code",[t._v("function")]),t._v("函数声明、"),s("code",[t._v("async")]),t._v("、"),s("code",[t._v("generator")]),t._v("、"),s("code",[t._v("var")]),t._v("关键词变量。在"),s("code",[t._v("declarative ER")]),t._v("则存放其他方式声明的变量,如"),s("code",[t._v("let const class")]),t._v("等。由于标准中将"),s("code",[t._v("object")]),t._v("类型的 ER 视作基准 ER, 因此这里我们仍可以将全局 ER 的类型视作"),s("code",[t._v("object")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("GlobalExecutionContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("global object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LexicalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 混合 object + declarative")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      myFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),s("p",[s("code",[t._v("LexicalEnvironment")]),t._v("只存储声明和"),s("code",[t._v("let/const")]),t._v("声明的变量，与下文的"),s("code",[t._v("VariableEnvironment")]),t._v("有所区别。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 他们的词法作用域伪码如下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("GlobalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ThisBinding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("global object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LexicalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uninitialized"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("VariableEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象环境记录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("FunctionEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("global object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 严格模式为undefined")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LexicalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'declarative'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("arguments")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uninitialized"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GlobalEnvironment"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"函数环境记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数环境记录"}},[t._v("#")]),t._v(" 函数环境记录")]),t._v(" "),s("p",[t._v("当调用一个函数时,会生成函数执行上下文,这个函数执行上下文的词法环境的环境记录就是函数类型的。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 树状图表示\nFunctionContext\n    |LexicalEnvironment\n        |EnvironmentRecord  //--\x3e 函数类型\n")])])]),s("p",[t._v("为什么要强调这个类型呢？因为 ECMA 针对函数式环境记录会额外增加一些内部属性：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("内部属性")]),t._v(" "),s("th",[t._v("value")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("补充")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("ThisValue")])]),t._v(" "),s("td",[s("code",[t._v("Any")])]),t._v(" "),s("td",[t._v("函数调用"),s("code",[t._v("this")]),t._v("时引用的地址,我们常说的函数"),s("code",[t._v("this")]),t._v("绑定就是给这个内部属性赋值")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[[ThisBindingStatus]]")])]),t._v(" "),s("td",[s("code",[t._v("lexical/initialized/uninitialized")])]),t._v(" "),s("td",[t._v("若等于"),s("code",[t._v("lexical")]),t._v(",则为箭头函数,意味着"),s("code",[t._v("this")]),t._v("是空的")]),t._v(" "),s("td",[t._v("强行"),s("code",[t._v("new")]),t._v("箭头函数会报"),s("code",[t._v("TypeError")]),t._v("错误")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("FunctionObject")])]),t._v(" "),s("td",[s("code",[t._v("Object")])]),t._v(" "),s("td",[t._v("在这个对象中有两个属性"),s("code",[t._v("[[call]]")]),t._v("和"),s("code",[t._v("[[Construct]]")]),t._v(", 他们都是函数, 如何赋值取决于如何调用函数")]),t._v(" "),s("td",[t._v("正常函数调用赋值"),s("code",[t._v("[[call]]")]),t._v(",而通过"),s("code",[t._v("new")]),t._v("或"),s("code",[t._v("super")]),t._v("调用函数赋值"),s("code",[t._v("[[Construct]]")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[[HomeObject]]")])]),t._v(" "),s("td",[s("code",[t._v("Object/ undefined")])]),t._v(" "),s("td",[t._v("如果该函数(非箭头函数)有"),s("code",[t._v("super")]),t._v("属性(子类),则"),s("code",[t._v("[[HomeObject]]")]),t._v("指向子类构造函数")]),t._v(" "),s("td",[s("code",[t._v("extend")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("NewTarget")])]),t._v(" "),s("td",[s("code",[t._v("Object/ undefined")])]),t._v(" "),s("td",[t._v("如果是通过"),s("code",[t._v("[[Construct]]")]),t._v("方式调用的函数,那么"),s("code",[t._v("[[NewTarget]]")]),t._v("非空")]),t._v(" "),s("td",[t._v("在函数中可以通过"),s("code",[t._v("new.target")]),t._v("读取到这个内部属性,以此来判断函数是否通过"),s("code",[t._v("new")]),t._v("来调用的")])])])]),t._v(" "),s("p",[t._v("此外,函数记录中还存在一个 arguments 对象,记录了函数的入参信息")]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("词法环境分类 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 布局 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 函数 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 模块"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n词法环境 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" outer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ER")]),t._v("分类 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("declarative")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n全局"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"thisbinding-四条准则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thisbinding-四条准则"}},[t._v("#")]),t._v(" ThisBinding 四条准则")]),t._v(" "),s("ul",[s("li",[t._v("构造函数绑定\n"),s("ul",[s("li",[t._v("当一个函数被当作构造函数使用时"),s("code",[t._v("new foo()")])])])]),t._v(" "),s("li",[t._v("显式绑定\n"),s("ul",[s("li",[t._v("关键词"),s("code",[t._v("call")]),t._v(", "),s("code",[t._v("apply")]),t._v(", "),s("code",[t._v("bind")])])])]),t._v(" "),s("li",[t._v("隐式绑定\n"),s("ul",[s("li",[t._v("关键词"),s("code",[t._v(".")])]),t._v(" "),s("li",[t._v("隐式绑定发生在对象"),s("strong",[t._v("方法调用")]),t._v("的时候,即通过点标识符调用对象")])])]),t._v(" "),s("li",[t._v("默认绑定")]),t._v(" "),s("li",[t._v("非严格模式下, this 指向全局对象 -- "),s("code",[t._v("window")]),t._v(" | "),s("code",[t._v("global")]),t._v(", 代码输出为全局对象")]),t._v(" "),s("li",[t._v("严格模式下,此时的 this 绑定为"),s("code",[t._v("undefined")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"},[t._v("优先级")]),s("p",[s("code",[t._v("构造函数")]),t._v(" ==> "),s("code",[t._v("显示绑定")]),t._v(" ==> "),s("code",[t._v("隐式绑定")]),t._v(" ==> "),s("code",[t._v("默认绑定")])])]),s("h3",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("p",[t._v("箭头函数的 this 取值，规则非常简单，因为在箭头函数中，可以看做一个普通变量")]),t._v(" "),s("blockquote",[s("p",[t._v("An arrow function does note has its own this. the this value of the enclose lexical scope is used;\narrow function follow the normal variable lookup rules")])]),t._v(" "),s("p",[t._v("箭头函数没有自己的 this 值, 箭头函数中所使用的 this 都是来自函数作用域链, 它的取值遵循普通变量一样的规则，在函数作用域链中一层一层往上找")]),t._v(" "),s("h2",{attrs:{id:"variableenvironment-变量环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variableenvironment-变量环境"}},[t._v("#")]),t._v(" VariableEnvironment 变量环境")]),t._v(" "),s("p",[t._v("在 ES6 前,声明变量都是通过"),s("code",[t._v("var")]),t._v("关键词声明的,在 ES6 中则提倡使用"),s("code",[t._v("let")]),t._v("和"),s("code",[t._v("const")]),t._v("来声明变量,为了兼容"),s("code",[t._v("var")]),t._v("的写法,于是使用变量环境来存储"),s("code",[t._v("var")]),t._v("声明的变量")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("var")]),t._v("会让变量提升,而通过"),s("code",[t._v("let/const")]),t._v("声明的变量却不会。为了区分,就用不同的词法环境去区分")])]),t._v(" "),s("p",[t._v("有了这些概念， 一个完整的执行上下文应该是什么样的呢? 来看个 🌰：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" utils "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("完整的词法作用域如下所示:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("GlobalExecutionContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ThisBinding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("global object"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LexicalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uninitialized"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uninitialized"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("utils")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("uninitialized"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("VariableEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当执行到函数时才会创建函数执行上下文")]),t._v("\nFunctionExecutionContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ThisBinding")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("LexicalEnvironment")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'declarative'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("arguments")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ThisValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NewTarget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GlobalLexicalEnvironment"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("VariableEnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("EnvironmentRecord")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'declarative'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("d")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GlobalLexicalEnvironment"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("执行上下文创建后,进入执行环境,变量在执行过程中赋值,读取,再赋值等。直至程序运行结束，能注意到的是：在执行上下文创建时，变量"),s("code",[t._v("a, b")]),t._v("都是"),s("code",[t._v("<uninitialized>")]),t._v("的,而 sum 则被初始化为"),s("code",[t._v("undefined")]),t._v("。这就是"),s("code",[t._v("var")]),t._v("声明的变量存在变量提升，而访问"),s("code",[t._v("let/const")]),t._v("定义的变量就会报引用错误的原因。")]),t._v(" "),s("h2",{attrs:{id:"let、const与var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let、const与var"}},[t._v("#")]),t._v(" "),s("code",[t._v("let")]),t._v("、"),s("code",[t._v("const")]),t._v("与"),s("code",[t._v("var")])]),t._v(" "),s("ul",[s("li",[t._v("存放位置:\n"),s("ul",[s("li",[t._v("在上一节,我们知道了"),s("code",[t._v("let/const")]),t._v("声明的变量是归属于"),s("code",[t._v("LexicalEnvironment")]),t._v(", 而"),s("code",[t._v("var")]),t._v("声明的变量归属于"),s("code",[t._v("VariableEnvironment")]),t._v("。")])])]),t._v(" "),s("li",[t._v("初始化(词法阶段)：\n"),s("ul",[s("li",[s("code",[t._v("let/const")]),t._v("在初始化时会被置为"),s("code",[t._v("<uninitialized>")]),t._v(" 标志位，在没有执行到"),s("code",[t._v("let xxx")]),t._v("或"),s("code",[t._v("let xxx = ???")]),t._v("(赋值行)的具体执行,提前读取变量会报"),s("code",[t._v("ReferenceError")]),t._v("的错误。（这个特性又叫"),s("strong",[t._v("暂时性死区")]),t._v("）"),s("code",[t._v("var")]),t._v("在初始化时先被赋值为"),s("code",[t._v("undefined")]),t._v("，即使没有执行到赋值行，仍可以读取"),s("code",[t._v("var")]),t._v("变量(undefined)。")])])]),t._v(" "),s("li",[t._v("块环境记录（块作用域）\n"),s("ul",[s("li",[t._v("在"),s("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/10.0/index.html#sec-blockdeclarationinstantiation",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMA 链接"),s("OutboundLink")],1),t._v("中提到，当遇到"),s("code",[t._v("Block")]),t._v("或"),s("code",[t._v("CaseBlock")]),t._v("时,将会新建一个环境记录, 在块中声明的"),s("code",[t._v("let/const")]),t._v("变量、函数、类都存放这个新的环境记录中，这些变量与块"),s("strong",[t._v("强绑定")]),t._v("，在块外界则无法读取这些声明的变量。这个特性就是我们熟悉的块作用域。")])])])]),t._v(" "),s("h2",{attrs:{id:"作用域和执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域和执行上下文"}},[t._v("#")]),t._v(" 作用域和执行上下文")]),t._v(" "),s("p",[t._v("JavaScript 既是编译语言，又是解释性语言。JavaScript 实际上在执行代码前微秒就编译了代码。称为"),s("strong",[t._v("JIT（即时编译）")]),t._v("\nJavaScript 的执行分为：编译和执行两个阶段，这两个阶段所做的事并不一样")]),t._v(" "),s("ul",[s("li",[t._v("编译阶段\n"),s("ul",[s("li",[t._v("分词/词法分析")]),t._v(" "),s("li",[t._v("解析/语法分析")]),t._v(" "),s("li",[t._v("预编译(代码生成、解释阶段，作用域规则确定)")])])]),t._v(" "),s("li",[t._v("执行阶段\n"),s("ul",[s("li",[t._v("创建执行上下文")]),t._v(" "),s("li",[t._v("执行函数代码")]),t._v(" "),s("li",[t._v("垃圾回收")])])])]),t._v(" "),s("p",[t._v("作用域与执行上下文的区别与联系")]),t._v(" "),s("ol",[s("li",[t._v("区别 1\n"),s("ol",[s("li",[t._v("JavaScript 解释阶段会确定作用域规则，所以除全局作用域之外,每个函数都会创建自己的作用域,作用域在函数定义之后就已经确定,而不是在函数调用时")]),t._v(" "),s("li",[t._v("全局执行上下文环境是在全局执行上下文确定之后,js 代码马上执行之前创建")]),t._v(" "),s("li",[t._v("函数执行上下文环境是在调用函数时,函数体代码执行之后创建")])])]),t._v(" "),s("li",[t._v("区别 2\n"),s("ol",[s("li",[t._v("作用域是静态的,只要函数定义好了就一直存在,且不会再变化")]),t._v(" "),s("li",[t._v("上下文环境在调用函数时创建, 随时可能改变，并且在函数调用结束后上下文环境就会被自动释放")])])]),t._v(" "),s("li",[t._v("联系\n"),s("ol",[s("li",[t._v("上下文环境(对象)是从属于所在的作用域")]),t._v(" "),s("li",[t._v("全局上下文环境==>全局作用域")]),t._v(" "),s("li",[t._v("函数执行上下文环境==>对应的函数使用域")])])]),t._v(" "),s("li",[t._v("总结\n"),s("ol",[s("li",[t._v("一个作用域可能包含若干个上下文环境。可能从来没有过上下文环境（函数从来没有被调用过）；有可能调用过，现在函数被调用完毕后，上下文环境被销毁了；有可能存在一个或者多个(闭包)。同一作用域下，不同的调用会产生不同的执行上下文环境，继而产生不同的变量的值")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.w3.org/html/ig/zh/wiki/ES5/%E5%8F%AF%E6%89%A7%E8%A1%8C%E4%BB%A3%E7%A0%81%E4%B8%8E%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83#.E8.AF.8D.E6.B3.95.E7.8E.AF.E5.A2.83",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5ea6f7556fb9a0436b221048",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底理解 JS 执行上下文"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5eaabf895188256d7f12f412",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 夯实之执行上下文与词法环境"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);