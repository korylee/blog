(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{602:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"js-三大对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-三大对象"}},[t._v("#")]),t._v(" JS 三大对象")]),t._v(" "),a("p",[t._v("JavaScript 有三大对象,分别是"),a("strong",[t._v("本地对象")]),t._v("、"),a("strong",[t._v("内置对象")]),t._v("和"),a("strong",[t._v("宿主对象")]),t._v("。\n引用 ECMA-262（ECMAScript 的制定标准）的定义")]),t._v(" "),a("ul",[a("li",[t._v("本地对象\n"),a("ul",[a("li",[t._v("与宿主无关,独立于宿主环境的 ECMAScript 实现提供的对象")]),t._v(" "),a("li",[t._v("简单来说,本地对象就是 ECMA-262 定义的类(引用类型)")]),t._v(" "),a("li",[t._v("这些引用类型在运行过程中需要通过 new 来创建所需的实例对象")]),t._v(" "),a("li",[t._v("包含 Object、Array、Data、RegExp、Function、Boolean、Number、String 等")])])]),t._v(" "),a("li",[t._v("内置对象\n"),a("ul",[a("li",[t._v("与宿主无关,独立于宿主环境的 ECMAScript 实现提供的对象")]),t._v(" "),a("li",[t._v("在 ECMAScript 程序开始执行前就存在，本身就是实例化内置对象，开发者无需再去实例化")]),t._v(" "),a("li",[t._v("内置对象是本地对象的子集")]),t._v(" "),a("li",[t._v("包含 Global 和 Math")]),t._v(" "),a("li",[t._v("ECMAScript5 增添了 JSON 这个全局的内置对象")])])]),t._v(" "),a("li",[t._v("宿主对象\n"),a("ul",[a("li",[t._v("由 ECMAScript 实现的宿主环境提供的对象，包含两大类，一个是宿主提供，一个是自定义对象")]),t._v(" "),a("li",[t._v("所有非本地的对象都属于宿主对象")]),t._v(" "),a("li",[t._v("对于嵌入到网页中的 js 来说，其宿主对象就是浏览器提供的对象，浏览器对象有很多，如 Window 和 Document 等")]),t._v(" "),a("li",[t._v("所有的 DOM 和 BOM 对象都属于宿主对象")])])])]),t._v(" "),a("div",{staticClass:"custom-block theorem"},[a("p",{staticClass:"title"},[t._v("关于专业名词")]),a("p",[t._v("本地对象也经常被叫做原生对象或内部对象，包含 Global 和 Math 在内的内置对象在《JavaScript 高级程序设计》里也被叫做单体内置对象，很多时候，干脆也会直接把本地对象和内置对象统称为“内置对象”，也就是说除了宿主对象，剩下的都是 ECMAScript 的内部的“内置”对象。")]),t._v(" "),a("p",[t._v("声明：本文也将采取这种统称为“内置对象”的方式，比如文章标题。")])]),a("h3",{attrs:{id:"js-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-数据类型"}},[t._v("#")]),t._v(" JS 数据类型")]),t._v(" "),a("p",[t._v("ECMAScript 标准定义了九种"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据类型"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始类型"),a("OutboundLink")],1),t._v(",可以用"),a("code",[t._v("typeof")]),t._v("运算符检查\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Boolean",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boolean"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Undefined",target:"_blank",rel:"noopener noreferrer"}},[t._v("Undefined"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Number",target:"_blank",rel:"noopener noreferrer"}},[t._v("Number"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/String",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/BigInt",target:"_blank",rel:"noopener noreferrer"}},[t._v("BigInt"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Symbol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Null",target:"_blank",rel:"noopener noreferrer"}},[t._v("null"),a("OutboundLink")],1),t._v(": 特殊的原始类型, 如果未继承对象,则显示 null")])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Object",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object"),a("OutboundLink")],1),t._v(": 特殊的非数据的结构类型, 所有由构造函数构造的实例都是 Object: "),a("code",[t._v("new Object")]),t._v("、"),a("code",[t._v("new Array")]),t._v("、"),a("code",[t._v("new Set")]),t._v("、"),a("code",[t._v("new WeakSet")]),t._v("、"),a("code",[t._v("new WeakMap")]),t._v("、"),a("code",[t._v("new Date")]),t._v("等所有用"),a("code",[t._v("new")]),t._v("构造出的实例都是"),a("code",[t._v("Object")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Function",target:"_blank",rel:"noopener noreferrer"}},[t._v("Function"),a("OutboundLink")],1),t._v(": 非数据结构(non data Structure): 尽管每个 Function 构造函数都是从 Object 构造函数派生的, 但"),a("code",[t._v('typeof instance === "function"')]),t._v("这个操作符判断是以 Function 的特殊简写来完成的")])]),t._v(" "),a("h2",{attrs:{id:"object-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-类型"}},[t._v("#")]),t._v(" Object 类型")]),t._v(" "),a("h3",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("h4",{attrs:{id:"_1-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tostring"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("toString()")])]),t._v(" "),a("ul",[a("li",[t._v("功能:返回当前对象的字符串形式,返回值为 String 类型")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1,2,true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Sun Apr 05 2020 22:31:31 GMT+0800 (中国标准时间)"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kory'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("132.")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught SyntaxError: Invalid or unexpected token(123.被识别为小数点)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "123"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("该方法属于 Object 对象，由于所有的对象都“继承”了 Object 的对象实例，因此几乎所有的实例对象都可以使用该方法\nJavaScript 的所有内置对象都重写了该函数，以实现更适合自身的功能需要")])]),a("h4",{attrs:{id:"_2-tolocalestring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-tolocalestring"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("toLocaleString()")])]),t._v(" "),a("ul",[a("li",[t._v('功能: 返回当前对象的"本地化"字符串形式，以便于当前环境的用户辨识度和使用，返回值为 String 类型。')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234567")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"1,234,567"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.37588")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"6.376"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"2017/9/24 下午2:58:21"')]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-valueof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-valueof"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("valueOf()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 返货指定对象的原始值")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("JavaScript 的许多内置对象都重写了该函数，以实现更适合自身的功能需要。因此，不同类型对象的 valueOf()方法的返回值和返回值类型均可能不同。")])]),a("h3",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),a("h4",{attrs:{id:"_1-object-assign-target-source-浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-object-assign-target-source-浅拷贝"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("Object.assign(target,...source)")]),t._v("浅拷贝")]),t._v(" "),a("ul",[a("li",[t._v("功能: 把一个或多个愿对小的可枚举、自由属性复制到目标对象中，返回值为目标对象")]),t._v(" "),a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("目标对象（必须）")]),t._v(" "),a("li",[t._v("至少一个源对象（可选）")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" object2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" object3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个参数是目标对象，后面的参数是源对象")]),t._v("\ntarget"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {a: 1, b: 2, c: 3}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-object-create-proto-propertiesobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-object-create-proto-propertiesobject"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("Object.create(proto[,propertiesObject])")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 创建一个对象,其原型为 prototype,同时可添加多个属性")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("proto(必须):原型对象,可以为 null 表示没有原型。")]),t._v(" "),a("li",[t._v("descriptors(可选)： 包含一个或多个属性描述符的对象(propertiesObject)")])])])]),t._v(" "),a("p",[t._v("propertiesObject 参数详解")]),t._v(" "),a("ul",[a("li",[t._v("数据属性\n"),a("ul",[a("li",[t._v("value：值")]),t._v(" "),a("li",[t._v("writable：是否可修改属性的值")]),t._v(" "),a("li",[t._v("configurable：是否可以通过 delete 删除属性，重新定义")]),t._v(" "),a("li",[t._v("enumerable：是否可 for...in 枚举")])])]),t._v(" "),a("li",[t._v("访问属性\n"),a("ul",[a("li",[t._v("get(): 访问")]),t._v(" "),a("li",[t._v("set(): 设置")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("总结")]),a("p",[a("code",[t._v("Object.create()")]),t._v("是 ES5 中提出来的一种新的对象创建方式，第一个参数是要继承的原型，如果不是一个子函数，可以传一个 null，第二个可选参数是对象的属性描述符")])]),a("h4",{attrs:{id:"_3-object-defineproperty-obj-prop-descriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-object-defineproperty-obj-prop-descriptor"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("Object.defineProperty(obj,prop,descriptor)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 在一个对象上定义一个新属性或修改一个现有属性,并返回该对象")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("obj(必须):被操作的目标对象")]),t._v(" "),a("li",[t._v("prop(必须): 被定义或被修改的目标属性")]),t._v(" "),a("li",[t._v("descriptor(必须):属性的描述符")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("总结")]),a("p",[t._v("在参数 descriptor 中,如果不指定 configurable, writable,enumerable, 则这些属性默认值为 false,如果不指定 value,get,set,则这些属性默认值为 undefined")])]),a("h4",{attrs:{id:"_4-object-defineproperties-obj-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-object-defineproperties-obj-props"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("Object.defineProperties(obj,props)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 在一个对象定义一个或多个新属性或修改现有属性,并返回该对象")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("obj(必须):被操作的目标对象")]),t._v(" "),a("li",[t._v("props(必须): 该对象的一个或多个键值对定义了将要为对象添加或修改的属性的具体配置")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_5-object-is-value1-value2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-object-is-value1-value2"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("Object.is(value1,value2)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用来比较两个值是否严格相等,与"),a("code",[t._v("===")]),t._v("基本类似")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("q")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与(===)的区别")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-object-seal-obj-object-issealed-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-object-seal-obj-object-issealed-obj"}},[t._v("#")]),t._v(" 6."),a("code",[t._v("Object.seal(obj)")]),t._v("/"),a("code",[t._v("Object.isSealed(obj)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能: 密封对象阻止其修改现有属性的配置特性，即将对象的所有属性的 configurable 特性设置为 false（也就是全部属性都无法配置，唯独可以把 writable 的值 true 改为 false，即冻结属性），并阻止添加新属性，返回新对象")])]),t._v(" "),a("li",[a("p",[t._v("参数：obj(必须),被密封的对象")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSealed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改值成功")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'李四'")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//无法添加新属性")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错：Cannot redefine property: name")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("将一个对象密封后仅能保证该对象不被扩展且全部属性不可重新配置, 但是原属性值却可以被修改")])]),a("h4",{attrs:{id:"_7-object-freeze-obj-object-isfrozen-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-object-freeze-obj-object-isfrozen-obj"}},[t._v("#")]),t._v(" 7. "),a("code",[t._v("Object.freeze(obj)")]),t._v("/"),a("code",[t._v("Object.isFrozen(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 完全冻结对象,在 seal 的基础上,属性值也不可修改,即每个属性的 writable 也被设为 false")]),t._v(" "),a("li",[t._v("参数:obj(必须), 被冻结的对象")])]),t._v(" "),a("h4",{attrs:{id:"_8-getownpropertydescriptor-obj-prop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-getownpropertydescriptor-obj-prop"}},[t._v("#")]),t._v(" 8. "),a("code",[t._v("getOwnPropertyDescriptor(obj,prop)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 获取目标对象上某自由属性的配置特性(属性描述符)，返回值为配置对象")]),t._v(" "),a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("obj（必须）：目标对象")]),t._v(" "),a("li",[t._v("prop（必须）：目标自有属性")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{value: "张三", writable: true, enumerable: true, configurable: false}')]),t._v("\n")])])]),a("h4",{attrs:{id:"_9-getownpropertyname-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-getownpropertyname-obj"}},[t._v("#")]),t._v(" 9. "),a("code",[t._v("getOwnPropertyName(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("功能:获取目标对象上的全部自有属性(包括不可枚举属性)组成的数组")]),t._v(" "),a("li",[t._v("参数: obj(必须), 目标对象")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["say", "name"]')]),t._v("\n")])])]),a("h4",{attrs:{id:"_10-object-getprototypeof-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-object-getprototypeof-obj"}},[t._v("#")]),t._v(" 10. "),a("code",[t._v("Object.getPrototypeOf(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 获取指定对象的原型, 即目标对象的 prototype 属性的值")]),t._v(" "),a("li",[t._v("参数: obj(必须), 目标对象")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象p的原型为person")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Person {}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" __proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//Person {name: "张三"}')]),t._v("\n")])])]),a("h4",{attrs:{id:"_11-object-setprototypeof-obj-proto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-object-setprototypeof-obj-proto"}},[t._v("#")]),t._v(" 11. "),a("code",[t._v("Object.setPrototypeOf(obj,proto)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能: 设定目标对象的原型为另一个对象或 null,返回该目标对象")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ul",[a("li",[t._v("obj(必须):目标对象")]),t._v(" "),a("li",[t._v("proto(必须):原型对象")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" proto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("Object.setPrototypeOf()方法的作用域"),a("strong",[t._v("proto")]),t._v("相同,用来设置当前对象的原型指向的对象(prototype)。它是 ES6 正式推荐的设置原型对象方法")])]),a("h4",{attrs:{id:"_12-object-keys-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-object-keys-obj"}},[t._v("#")]),t._v(" 12. "),a("code",[t._v("Object.keys(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 获取目标对象上所有的可枚举属性组成的数组")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("obj(必须): 目标对象")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("Object.keys(obj)")]),t._v("方法获取的集合和 for-in 遍历获取的不同在于，Object.keys()只获取目标对象上可枚举的自有属性，而 for-in 遍历会包含原型链上可枚举属性一并获取。"),a("br"),t._v(" "),a("code",[t._v("Object.keys()")]),t._v("和 "),a("code",[t._v("Object.getOwnPropertyNames()")]),t._v("的相同之处都是获取目标对象的自有属性，区别在于，后者会连同不可枚举的自有属性也一并获取组成数组并返回。")])]),a("h4",{attrs:{id:"_13-object-preventextensions-obj-object-isextensible-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-object-preventextensions-obj-object-isextensible-obj"}},[t._v("#")]),t._v(" 13. "),a("code",[t._v("Object.preventExtensions(obj)")]),t._v("/"),a("code",[t._v("Object.isExtensible(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 使某一对象不可扩展,也就是不能为其添加新属性")]),t._v(" "),a("li",[t._v("参数: obj(必填):目标对象")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("Object.isExtensible(obj)")]),t._v("方法用于判断一个对象是否可以扩展,是否可以添加新属性")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventExtensions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//阻止obj的可扩展性")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isExtensible")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("h2",{attrs:{id:"array-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-类型"}},[t._v("#")]),t._v(" Array 类型")]),t._v(" "),a("h3",{attrs:{id:"array-对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-对象属性"}},[t._v("#")]),t._v(" Array 对象属性")]),t._v(" "),a("h4",{attrs:{id:"_1-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-length"}},[t._v("#")]),t._v(" 1. length")]),t._v(" "),a("p",[t._v("设置或返回数组中元素的数目")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("设置 length 属性可改变数组的大小如果设置的值比当前值小，数组将会被截断，其尾部的数组将丢失。如果设置的值比它的当前值要大，数组将增大，新的元素被添加到数组的尾部，他们的值为 undefined")])]),a("h4",{attrs:{id:"_2-constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-constructor"}},[t._v("#")]),t._v(" 2. constructor")]),t._v(" "),a("p",[t._v("返回创建此数组的数组函数的引用")]),t._v(" "),a("h4",{attrs:{id:"_3-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-prototype"}},[t._v("#")]),t._v(" 3. prototype")]),t._v(" "),a("p",[t._v("使您有能力向对象添加属性和方法")]),t._v(" "),a("h3",{attrs:{id:"对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象方法"}},[t._v("#")]),t._v(" 对象方法")]),t._v(" "),a("h4",{attrs:{id:"_1-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-concat"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("concat()")])]),t._v(" "),a("ul",[a("li",[t._v("用于连接两个或多个数组,"),a("strong",[t._v("此方法不会改变现有的数组")]),t._v(", 而是返回被连接数组的一个副本")]),t._v(" "),a("li",[t._v("如果要进行"),a("code",[t._v("concat()")]),t._v("操作的参数是数组,那么添加的是数组中的元素,而不是数组。")])]),t._v(" "),a("h4",{attrs:{id:"_2-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-join"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("join()")])]),t._v(" "),a("ul",[a("li",[t._v("把数组中的所有元素放入一个字符串,元素是通过指定的分隔符进行分隔的")]),t._v(" "),a("li",[t._v("若省略了分隔符参数,则用逗号作为分隔符")])]),t._v(" "),a("h4",{attrs:{id:"_3-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-push"}},[t._v("#")]),t._v(" 3."),a("code",[t._v("push()")])]),t._v(" "),a("ul",[a("li",[t._v("向数组的末尾添加一个或多个元素，并返回新的数组长度")])]),t._v(" "),a("h4",{attrs:{id:"_4-pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-pop"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("pop()")])]),t._v(" "),a("ul",[a("li",[t._v("用于删除数组的最后元素, 并返回被删除元素")]),t._v(" "),a("li",[t._v("如果数组已经为空,则 pop()不改变数组,并返回 undefined")])]),t._v(" "),a("h4",{attrs:{id:"_5-shift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-shift"}},[t._v("#")]),t._v(" 5."),a("code",[t._v("shift()")])]),t._v(" "),a("ul",[a("li",[t._v("删除数组的第一个元素,并且返回被删除的这个元素")]),t._v(" "),a("li",[t._v("如果数组是空的,那么 shift()方法将不进行任何操作,返回 undefined")])]),t._v(" "),a("h4",{attrs:{id:"_6-unshift"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-unshift"}},[t._v("#")]),t._v(" 6. "),a("code",[t._v("unshift()")])]),t._v(" "),a("ul",[a("li",[t._v("向数组的开头添加一个或多个元素,返回新的数组的长度")])]),t._v(" "),a("h4",{attrs:{id:"_7-reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-reverse"}},[t._v("#")]),t._v(" 7. "),a("code",[t._v("reverse()")])]),t._v(" "),a("ul",[a("li",[t._v("颠倒数组中元素的顺序")])]),t._v(" "),a("h4",{attrs:{id:"_8-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-sort"}},[t._v("#")]),t._v(" 8. "),a("code",[t._v("sort()")])]),t._v(" "),a("ul",[a("li",[t._v("对数组的元素进行排序")]),t._v(" "),a("li",[a("strong",[t._v("直接修改数组")])]),t._v(" "),a("li",[t._v("该方案接受一个可选参数,如未使用参数,则按字母顺序对数组元素进行排序(按照字符串编码的顺序进行排序)")]),t._v(" "),a("li",[t._v("如果想按照其他标准进行排序，就需要提供比较函数，该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。比较函数应该具有两个参数 a 和 b，其返回值如下：\n"),a("ul",[a("li",[t._v("若 a 小于 b，排序后 a 应该在 b 之前，则返回一个小于 0 的值。")]),t._v(" "),a("li",[t._v("若 a 等于 b，则返回 0。")]),t._v(" "),a("li",[t._v("若 a 大于 b，则返回一个大于 0 的值。")])])])]),t._v(" "),a("h4",{attrs:{id:"_9-slice-start-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-slice-start-end"}},[t._v("#")]),t._v(" 9. "),a("code",[t._v("slice(start[,end])")])]),t._v(" "),a("ul",[a("li",[t._v("截取原数组从 start 到 end 位置(不包含它)元素组成的子数组")]),t._v(" "),a("li",[a("strong",[t._v("该方法返回一个新数组")]),t._v(",不修改原数组")]),t._v(" "),a("li",[t._v("若未指定 end 参数,那么截取尾巴直到原数组的最后一个元素(包含它)")])]),t._v(" "),a("h4",{attrs:{id:"_10-splice-index-howmany-item1-item2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-splice-index-howmany-item1-item2"}},[t._v("#")]),t._v(" 10. "),a("code",[t._v("splice(index,howmany[,item1,item2...])")])]),t._v(" "),a("ul",[a("li",[t._v("删除从 index 处开始的 hownamy 个元素，并且用可选参数列表中声明的一个或多个值来替换那些被删除的元素。")]),t._v(" "),a("li",[t._v("该方法返回的是含有被删除的元素组成的数组，若无被删元素，则返回空数组。")]),t._v(" "),a("li",[t._v("若参数只有 index，那么原数组将从 index 开始删除直至结尾。")]),t._v(" "),a("li",[t._v("该方法直接修改原数组。")])]),t._v(" "),a("h4",{attrs:{id:"查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[t._v("#")]),t._v(" 查找")]),t._v(" "),a("h5",{attrs:{id:"_11-find-fn-thisarg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-find-fn-thisarg"}},[t._v("#")]),t._v(" 11. "),a("code",[t._v("find(fn,thisArg)")])]),t._v(" "),a("ul",[a("li",[t._v("功能：查找出数组中第一个符合条件的元素，若有多个符合条件的元素，则返回第一个元素")]),t._v(" "),a("li",[t._v("参数\n"),a("ul",[a("li",[t._v("fn：回调函数接受三个参数,依次为当前的值、当前的位置和原数组")]),t._v(" "),a("li",[t._v("thisArg（可选）：指定回调函数中的 this 值")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("数组空位处理为 undefined\n可以发现 NaN，弥补了 indexOf 的不足")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\n")])])]),a("h5",{attrs:{id:"_12-findindex-fn-thisarg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-findindex-fn-thisarg"}},[t._v("#")]),t._v(" 12."),a("code",[t._v("findIndex(fn,thisArg)")])]),t._v(" "),a("ul",[a("li",[t._v("功能：查找数组中符合条件的元素索引，若有多个符合条件的元素，则返回第一个元素索引")]),t._v(" "),a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("fn 回调函数")]),t._v(" "),a("li",[t._v("thisArg（可选）：指定回调函数中的 this 值")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("数组空位处理为 -1\n可以发现 NaN，弥补了 indexOf 的不足")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])])]),a("h4",{attrs:{id:"填充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#填充"}},[t._v("#")]),t._v(" 填充")]),t._v(" "),a("h5",{attrs:{id:"_13-fill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-fill"}},[t._v("#")]),t._v(" 13. "),a("code",[t._v("fill()")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能：将一定范围索引的数组元素内容填充为单个指定的值")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ul",[a("li",[t._v("用来填充的值")]),t._v(" "),a("li",[t._v("被填充的起始索引")]),t._v(" "),a("li",[t._v("(可选):被填充的结束索引，默认为数组末尾")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,0,3,4]")]),t._v("\n")])])]),a("h4",{attrs:{id:"_14-copywithin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-copywithin"}},[t._v("#")]),t._v(" 14. "),a("code",[t._v("copyWithin()")])]),t._v(" "),a("ul",[a("li",[t._v("功能：将一定范围所应得数组元素修改为此数组另一指定范围索引的元素")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("被修改的起始索引")]),t._v(" "),a("li",[t._v("被用来覆盖的数据的起始索引")]),t._v(" "),a("li",[t._v("(可选): 被用来覆盖的数据的结束索引,默认为数据末尾")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyWithin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3,4,3,4]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数1为负数表示倒数")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyWithin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1,2,1,2]")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyWithin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [, 4, , 4]")]),t._v("\n")])])]),a("h4",{attrs:{id:"遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历"}},[t._v("#")]),t._v(" 遍历")]),t._v(" "),a("h5",{attrs:{id:"_15-entries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-entries"}},[t._v("#")]),t._v(" 15. "),a("code",[t._v("entries()")])]),t._v(" "),a("p",[t._v("遍历键值对")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 0 "a"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 1 "b"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用 for... of 循环")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" entries "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [0, "a"]')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [1, "b"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组含空位")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [[0, undefined], [1, "a"]]')]),t._v("\n")])])]),a("h5",{attrs:{id:"_16-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-keys"}},[t._v("#")]),t._v(" 16. "),a("code",[t._v("keys()")])]),t._v(" "),a("p",[t._v("遍历键名,返回一个数组")]),t._v(" "),a("h5",{attrs:{id:"_17-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-values"}},[t._v("#")]),t._v(" 17. "),a("code",[t._v("values()")])]),t._v(" "),a("p",[t._v("遍历键值。")]),t._v(" "),a("h4",{attrs:{id:"包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包含"}},[t._v("#")]),t._v(" 包含")]),t._v(" "),a("h5",{attrs:{id:"_18-includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-includes"}},[t._v("#")]),t._v(" 18. "),a("code",[t._v("includes()")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能：数组是否包含指定值")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ul",[a("li",[t._v("包含指定值")]),t._v(" "),a("li",[t._v("(可选)搜索的起始索引，默认为 0")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("与 Set 和 Map 的 has 方法区分；Set 的 has 方法用于查找值；Map 的 has 方法用于查找键名")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),a("h4",{attrs:{id:"嵌套数组转一维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套数组转一维数组"}},[t._v("#")]),t._v(" 嵌套数组转一维数组")]),t._v(" "),a("h5",{attrs:{id:"_19-flat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-flat"}},[t._v("#")]),t._v(" 19. "),a("code",[t._v("flat()")])]),t._v(" "),a("ul",[a("li",[t._v("参数: 指定转换的嵌套层数,默认是 1")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3, 4, 5]")]),t._v("\n")])])]),a("h5",{attrs:{id:"_20-flatmap-fn-thisarg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-flatmap-fn-thisarg"}},[t._v("#")]),t._v(" 20. "),a("code",[t._v("flatMap(fn,thisArg)")])]),t._v(" "),a("ul",[a("li",[t._v("功能：先对数组中每个元素进行了的处理,再对数组执行 flat()方法")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("fn 遍历函数，该遍历函数可接受 3 个参数：当前元素、当前元素索引、原数组")]),t._v(" "),a("li",[t._v("thisArg 指定遍历函数中 this 的指向")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("map(): 返回一个新的 Array,每个元素为调用 func 的结果")]),t._v(" "),a("li",[t._v("filter(): 返回一个符合 func 条件的元素数组")]),t._v(" "),a("li",[t._v("some(): 返回一个 boolean,判断是否有元素复合 func 的条件")]),t._v(" "),a("li",[t._v("every(): 返回一个 boolean, 判断每个元素是否符合 func 条件")]),t._v(" "),a("li",[t._v("forEach(): 没有返回值,只针对每个元素调用 func")]),t._v(" "),a("li",[t._v("reduce(): reduce 方法有两个参数，第一个参数是 callback，用于针对数组项的操作；第二个参数则是传入的初始值，这个初始值用于单个数组项的操作。需要注意的是，reduce 方法返回值并不是数组，而是形如初始值的经过叠加之后的操作。")])]),t._v(" "),a("h3",{attrs:{id:"实例方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法-2"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("h4",{attrs:{id:"_1-array-of"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-array-of"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("Array.of()")])]),t._v(" "),a("p",[t._v("将一组值作为元素转化为数组")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3,11,8]")]),t._v("\nArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[3]")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("这个函数的主要目的,是弥补数组构造函数 Array()的不足。因为参数个数不同，会导致 Array()的行为有差异")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [undefined,undefined,undefined]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [3,11,8]//当参数个数不小于两个时,Array()才会返回由参数组成的新数组")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-array-from-arraylike-mapfn-thisarg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-array-from-arraylike-mapfn-thisarg"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("Array.from(arrayLike[,mapFn[,thisArg]])")])]),t._v(" "),a("ul",[a("li",[t._v("功能：将类数组对象（array-like object）或可迭代对象（iterable）转化成数组")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("arrayLike(必须):想要转换的内数组或可迭代对象")]),t._v(" "),a("li",[t._v("mapFn(可选)map 函数,用于对每个元素进行处理,放入数组的是处理后的元素")]),t._v(" "),a("li",[t._v("thisArg(可选)用于指定 map 函数执行的 this 对象")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arrayLike "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    arrayLike"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    map\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [2,4,6]")]),t._v("\n")])])]),a("h4",{attrs:{id:"array-isarray"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-isarray"}},[t._v("#")]),t._v(" "),a("code",[t._v("Array.isArray()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用来判断对象是否为数组")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Object.prototype.toString.call()、instanceof 以及 Array.isArray()的区别与优劣")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Array.isArray()")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Array.isArray()")]),t._v("优于"),a("code",[t._v("instanceof")]),t._v(", "),a("code",[t._v("Array.isArray()")]),t._v("可以检测出"),a("code",[t._v("iframes")])]),t._v(" "),a("li",[a("strong",[t._v("Polyfill")]),t._v(": "),a("code",[t._v("Array.isArray()")]),t._v("是 ES5 新增方法,当不存在时, 则在其他代码之前运行下面的代码将创建该方法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isArray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("isArray")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Array]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("Object.prototype.toString()")])])]),t._v(" "),a("p",[t._v("每一个继承 Object 的对象都有"),a("code",[t._v("toString")]),t._v("方法, 返回"),a("code",[t._v("[Object [type]]")]),t._v(",但当除了 Object 类型的对象外,其他类型直接使用"),a("code",[t._v("toString")]),t._v("方法时,会直接返回内容的字符串,所以要依靠"),a("code",[t._v("call")]),t._v("或"),a("code",[t._v("apply")]),t._v("方法来改变 toString 的执行上下文")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" an "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"An"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'hello,An'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("an"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"[object Array]"')]),t._v("\n")])])]),a("p",[t._v("这种方法对于所有基本的数据类型都能判断,即使是 null 和 undefined")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Null]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"[object Symbol]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Number]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Undefined]"')]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("如上,因 NaN 被判断为 Number,请使用"),a("code",[t._v("isNaN()")]),t._v("方法或"),a("code",[t._v("Object.is(NaN,obj)")]),t._v("来判断一个值是否是 NaN，原因是 NaN 与所有值都不相等，包括它自己")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("instanceof")])])]),t._v(" "),a("p",[a("code",[t._v("instanceof")]),t._v(" 的内部机制是通过判断对象的原型链中是不是能找到类型的 "),a("code",[t._v("prototype")]),t._v("。")]),t._v(" "),a("p",[t._v("但 "),a("code",[t._v("instanceof")]),t._v(" 只能用来判断对象类型，原始类型不可以。并且所有对象类型 "),a("code",[t._v("instanceof Object")]),t._v(" 都是 true。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"date-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-类型"}},[t._v("#")]),t._v(" Date 类型")]),t._v(" "),a("p",[t._v("Date 对象: 封装一个时间点,提供操作时间的 API, Date 对象中封装的是从 1970 年 1 月 1 日 0 点至今的毫秒数")]),t._v(" "),a("h3",{attrs:{id:"创建-date-对象-4-种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-date-对象-4-种方式"}},[t._v("#")]),t._v(" 创建 Date 对象 4 种方式")]),t._v(" "),a("h4",{attrs:{id:"_1-new-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-new-date"}},[t._v("#")]),t._v(" 1."),a("code",[t._v("new Date()")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取客户端的当前系统时间")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-new-date-year-month"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-new-date-year-month"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("new Date(year,month, ...)")])]),t._v(" "),a("p",[t._v("根据指定的日期时刻来创建 Date 对象；传入的参数按顺序依次是:年、月、日、小时、分钟、秒、毫秒。而这些参数都是可以缺省的")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("当 new Date()只接收一个参数时,则接收的不是年,而是毫秒,针对 1970 年 1 月 1 日北京时间上午 8 点整开始计数(用"),a("strong",[t._v("UTC 时间")]),t._v("来算，就是 1970 年 1 月 1 日 0 点 0 分 0 秒)")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2099")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是年,而是毫秒")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("一个到十二月份是由 0~11 来代表的,0 代表一月份，11 代表十二月份\n当代表年的参数时 1 位数或 2 位数是,则自动代表"),a("strong",[t._v("19XX")]),t._v(",和自动加上 1900 没啥两样,一般来说不会触发,但还是知道 Date 构造器的这种特性为佳")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代表1997年7月1日")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//代表1901年1月1日")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-new-date-datestring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-new-date-datestring"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("new Date(dateString)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1994/02/04 03:23:55"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建自定义事件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"October 1, 2018 11:11:11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1997-11-28"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ISO Date 国际标准")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"04/19/2099"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// short Date")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"April 19 2099"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 等同于"19 April 2099"')]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-new-date-new-date-olddate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-new-date-new-date-olddate"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("new Date(new Date(oldDate))")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1994/02/04"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复制一个时间对象")]),t._v("\n")])])]),a("h3",{attrs:{id:"date-对象的输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-对象的输出"}},[t._v("#")]),t._v(" Date 对象的输出")]),t._v(" "),a("p",[t._v("Date 对象的输出,常用如以下三种方式")]),t._v(" "),a("h4",{attrs:{id:"tostring-输出是默认自动使用此方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring-输出是默认自动使用此方法"}},[t._v("#")]),t._v(" "),a("code",[t._v("toString()")]),t._v(": 输出是默认自动使用此方法")]),t._v(" "),a("p",[t._v("toString()方法(等价于默认下直接赋值对象本身), 输出类似"),a("code",[t._v("Fri Apr 10 2020 17:11:16 GMT+0800 (中国标准时间)")])]),t._v(" "),a("h4",{attrs:{id:"toutcstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#toutcstring"}},[t._v("#")]),t._v(" "),a("code",[t._v("toUTCString()")])]),t._v(" "),a("p",[t._v("输出类似"),a("code",[t._v("Fri, 10 Apr 2020 09:13:09 GMT")])]),t._v(" "),a("h4",{attrs:{id:"todatestring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todatestring"}},[t._v("#")]),t._v(" "),a("code",[t._v("toDateString()")])]),t._v(" "),a("p",[t._v("输出类似"),a("code",[t._v("2020/4/10 下午5:14:51")])]),t._v(" "),a("h3",{attrs:{id:"date-对象-get-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-对象-get-方法"}},[t._v("#")]),t._v(" Date 对象 - Get 方法")]),t._v(" "),a("ul",[a("li",[t._v("getFullYear()方法 - 获取代表年份的四位数字（yyyy）")]),t._v(" "),a("li",[t._v("getMonth()方法 - 获取代表月份的数字（0~11）")]),t._v(" "),a("li",[t._v("getDate()方法 - 获取代表当月几号的数字（1~31）")]),t._v(" "),a("li",[t._v("getHours()方法 - 获取代表小时的数字（0~23）")]),t._v(" "),a("li",[t._v("getMinutes()方法 - 获取代表分钟的数字（0~59）")]),t._v(" "),a("li",[t._v("getSeconds()方法 - 获取代表秒的数字（0~59）")]),t._v(" "),a("li",[t._v("getTime()方法 - 获取时间戳数字（以毫秒计算距离 utc 时间 1970 年 1 月 1 日 0 点 0 分 0 时的时间差）")]),t._v(" "),a("li",[t._v("getDay()方法 - 获取代表周几的数字（0~6）")]),t._v(" "),a("li",[t._v("getMilliseconds()方法 - 获取代表毫秒的数字（0~999）")]),t._v(" "),a("li",[t._v("Date.now()方法 - 获取代表当前时间的时间戳数字"),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("若使用 UTC 日期与事件,在 get 和具体的后缀词之间加上 UTC 即可,常用的方法有: "),a("code",[t._v("getUTCDate()")]),t._v("、"),a("code",[t._v("getUTCDay()")]),t._v("、"),a("code",[t._v("getUTCFullYear()")]),t._v("、"),a("code",[t._v("getUTCHours()")]),t._v("、"),a("code",[t._v("getUTCMinutes()")]),t._v("、"),a("code",[t._v("getUTCMonth()")]),t._v("、"),a("code",[t._v("getUTCSeconds()")]),t._v("、"),a("code",[t._v("getUTCMilliseconds()")])])])])]),t._v(" "),a("h3",{attrs:{id:"date-对象-set-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-对象-set-方法"}},[t._v("#")]),t._v(" Date 对象 - Set 方法")]),t._v(" "),a("ul",[a("li",[t._v("setFullYear()方法 - 设置年份信息（yyyy）")]),t._v(" "),a("li",[t._v("setMonth()方法 - 设置月份的数字（0~11）")]),t._v(" "),a("li",[t._v("setDate()方法 - 设置代表当月几号的数字（1~31）")]),t._v(" "),a("li",[t._v("setHours()方法 - 设置代表小时的数字（0~23）")]),t._v(" "),a("li",[t._v("setMinutes()方法 - 设置代表分钟的数字（0~59）")]),t._v(" "),a("li",[t._v("setSeconds()方法 - 设置代表秒的数字（0~59）")]),t._v(" "),a("li",[t._v("setMilliseconds()方法 - 设置代表毫秒的数字（0~999）")]),t._v(" "),a("li",[t._v("setTime() - 设置时间戳数字信息（以毫秒计算距离 utc 时间 1970 年 1 月 1 日 0 点 0 分 0 时的时间差）"),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("若使用 UTC 日期与事件,在 set 和具体的后缀词之间加上 UTC 即可,常用的方法有: "),a("code",[t._v("setUTCDate()")]),t._v("、"),a("code",[t._v("setUTCDay()")]),t._v("、"),a("code",[t._v("setUTCFullYear()")]),t._v("、"),a("code",[t._v("setUTCHours()")]),t._v("、"),a("code",[t._v("setUTCMinutes()")]),t._v("、"),a("code",[t._v("setUTCMonth()")]),t._v("、"),a("code",[t._v("setUTCSeconds()")]),t._v("、"),a("code",[t._v("setUTCMilliseconds()")])])])])]),t._v(" "),a("h2",{attrs:{id:"regexp-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-类型"}},[t._v("#")]),t._v(" RegExp 类型")]),t._v(" "),a("p",[t._v("正则表达式（Regular Expression）是一种对字符串操作的逻辑公式，其描述的是一种"),a("strong",[t._v("字符串匹配的模式（Pattern）")]),t._v("；根据这种匹配模式，可对字符串进行诸如：搜索子串、替换子串、验证字符串是否符合指定匹配模式等操作。")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[a("code",[t._v("/正则表达式(pattern)/修饰符(modifiers,非必选)")])]),t._v(" "),a("h3",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("修饰符")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("i")])]),t._v(" "),a("td",[t._v("执行匹配过程中,"),a("strong",[t._v("忽略大小写的区别")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("g")])]),t._v(" "),a("td",[t._v("执行全局匹配(找到所有匹配,而非找到第一个匹配后就停止)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("m")])]),t._v(" "),a("td",[t._v("执行"),a("strong",[t._v("多行匹配")])])])])]),t._v(" "),a("h3",{attrs:{id:"regexp-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-对象方法"}},[t._v("#")]),t._v(" RegExp 对象方法")]),t._v(" "),a("h4",{attrs:{id:"_1-compile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-compile"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("compile()")])]),t._v(" "),a("ul",[a("li",[t._v("用于在脚本执行过程中编译正则表达式")]),t._v(" "),a("li",[t._v("改变和重新编译正则表达式")])]),t._v(" "),a("h4",{attrs:{id:"_2-exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-exec"}},[t._v("#")]),t._v(" 2."),a("code",[t._v("exec()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用于检索字符串中的正则表达式的匹配")]),t._v(" "),a("li",[t._v("参数: String(必填), 要检索的字符串")]),t._v(" "),a("li",[t._v("返回值: 返回一个数组, 其中存放的匹配的结果。如果没有找到匹配，则返回值为 null")])]),t._v(" "),a("h4",{attrs:{id:"_3-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-test"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("test()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用于检测一个字符串是否匹配某个模式")]),t._v(" "),a("li",[t._v("参数: string(必填), 要检索的字符串")]),t._v(" "),a("li",[t._v("返回值: true 或者 false"),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("支持正则表达式的 String 对象的方法有: "),a("code",[t._v("search()")]),t._v("、"),a("code",[t._v("match()")]),t._v("、"),a("code",[t._v("replace()")]),t._v("和"),a("code",[t._v("split()")])])])])]),t._v(" "),a("h2",{attrs:{id:"function-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-类型"}},[t._v("#")]),t._v(" Function 类型")]),t._v(" "),a("h3",{attrs:{id:"function-对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-对象属性"}},[t._v("#")]),t._v(" Function 对象属性")]),t._v(" "),a("h4",{attrs:{id:"_1-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-arguments"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("arguments")])]),t._v(" "),a("ul",[a("li",[t._v("arguments.length：获取函数实参的个数")]),t._v(" "),a("li",[t._v("arguments.callee：获取函数对象本身的引用")]),t._v(" "),a("li",[t._v("arguments.callee.length：获取函数形参的个数"),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("JavaScript 中每个函数都会有一个 Arguments 对象实例 arguments，它引用着函数的实参，可以用数组下标的方式引用每个始计传入的值")])])])]),t._v(" "),a("h3",{attrs:{id:"function-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-对象方法"}},[t._v("#")]),t._v(" Function 对象方法")]),t._v(" "),a("h4",{attrs:{id:"_1-tostring-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tostring-2"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("toString()")])]),t._v(" "),a("p",[t._v("将函数体转化成对应的字符串")]),t._v(" "),a("h2",{attrs:{id:"boolean-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-类型"}},[t._v("#")]),t._v(" Boolean 类型")]),t._v(" "),a("h3",{attrs:{id:"_1-tostring-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tostring-3"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("toString()")])]),t._v(" "),a("p",[t._v('根据布尔值返回字符串"true"或"false"')]),t._v(" "),a("blockquote",[a("p",[t._v("注释: 在 Boolean 对象被用于字符串环境中, 此方法会自动被调用")])]),t._v(" "),a("h3",{attrs:{id:"_2-valueof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-valueof"}},[t._v("#")]),t._v(" 2. valueOf()")]),t._v(" "),a("p",[t._v("返回 Boolean 对象的原始值")]),t._v(" "),a("h3",{attrs:{id:"会返回-false-的特殊值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会返回-false-的特殊值"}},[t._v("#")]),t._v(" 会返回 false 的特殊值")]),t._v(" "),a("ul",[a("li",[t._v("0")]),t._v(" "),a("li",[t._v("-0")]),t._v(" "),a("li",[t._v('""(空字符串)')]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("false")]),t._v(" "),a("li",[t._v("NaN")])]),t._v(" "),a("h2",{attrs:{id:"number-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-类型"}},[t._v("#")]),t._v(" Number 类型")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("toString()")]),t._v("\n将 Number 数值转换为字符串，该方法接受一个可选参数基数，若省略该参数，则默认基数为 10，即十进制")]),t._v(" "),a("li",[a("code",[t._v("toLocalString()")]),t._v("\n把一个 Number 对象转换为本地格式的字符串")]),t._v(" "),a("li",[a("code",[t._v("valueOf()")]),t._v("\n返回一个 Number 对象的基本数字值")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("valueOf()")]),t._v("方法通常由 JavaScript 在后天自动进行调用，而不是现实地处于代码中")])]),a("h2",{attrs:{id:"bigint-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint-类型"}},[t._v("#")]),t._v(" BigInt 类型 "),a("Badge",{attrs:{text:"ES2020新增"}})],1),t._v(" "),a("p",[t._v("JavaScript 能处理的最大数为"),a("code",[t._v("2**53")]),t._v(", 也就是"),a("code",[t._v("9007199254740991")]),t._v(", 可以写作"),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v("。")]),t._v(" "),a("p",[t._v("当数字超过"),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v("时：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999999999999999")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 10000000000000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意最后一位的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740992")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740993")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → true")]),t._v("\n")])])]),a("p",[t._v("任何超出范围的数值都可能失去精度")]),t._v(" "),a("ul",[a("li",[t._v("只需在整数的末尾添加"),a("code",[t._v("n")]),t._v("就可以创建 BigInt")]),t._v(" "),a("li",[t._v("或者调用"),a("code",[t._v("BigInt()")])])]),t._v(" "),a("p",[t._v("BigInt 文字也可用二进制、八进制、十六进制表示")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b100000000000000000000000000000000000000000000000000011n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740995n")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hex")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x20000000000003n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740995n")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// octal")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0o400000000000000003n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740995n")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// note that legacy octal syntax is not supported")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0400000000000000003n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → SyntaxError")]),t._v("\n")])])]),a("h3",{attrs:{id:"隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换"}},[t._v("#")]),t._v(" 隐式类型转换")]),t._v(" "),a("p",[t._v("不能使用严格相等运算符将 BigInt 和常规数字进行比较,因为它们类型不同:")]),t._v(" "),a("p",[t._v("但是可以使用等号运算符,他在处理操作数之前执行隐式类型转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("因为隐式转换可能丢失信息, 所以不允许在"),a("code",[t._v("BigInt")]),t._v("和"),a("code",[t._v("Number")]),t._v("之间进行混合操作。当混合使用整数和浮点数时，结果可能无法由"),a("code",[t._v("BigInt")]),t._v("或"),a("code",[t._v("Number")]),t._v("精确表示")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: Cannot convert a BigInt value to a number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → TypeError")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → TypeError")]),t._v("\n")])])]),a("p",[t._v(":::waring 注意\n关系运算符并不遵循此规则")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v(":::\n由于上述的限制, 不能混合使用"),a("code",[t._v("Number")]),t._v("和"),a("code",[t._v("BigInt")]),t._v("进行算术操作. 也不能将"),a("code",[t._v("BigInt")]),t._v("传给 Web API 和内置的 JS 函数,这些函数需要一个"),a("code",[t._v("Number")]),t._v("类型的数字。")]),t._v(" "),a("p",[t._v("所以希望使用"),a("code",[t._v("Number")]),t._v("和"),a("code",[t._v("BigInt")]),t._v("进行算数运算时,要先用"),a("code",[t._v("Number()")]),t._v("或"),a("code",[t._v("BigInt()")]),t._v("进行类型转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [-1n,0,0n,2,3n,4]")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("兼容")]),a("p",[t._v("不幸的是，转换 BigInt 是一个极其复杂的过程，这会导致严重的运行时性能损失。直接 polyfill BigInt 也是不可能的，因为该提议改变了几个现有操作符的行为。目前，更好的选择是使用"),a("a",{attrs:{href:"https://github.com/GoogleChromeLabs/jsbi",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSBI"),a("OutboundLink")],1),t._v("库，它是 BigInt 提案的纯 JS 实现。\n这个库提供了一个与原生 BigInt 行为完全相同的 API。下面是如何使用 JSBI：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSBI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./jsbi.mjs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSBI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_SAFE_INTEGER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSBI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSBI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → '9007199254741001'")]),t._v("\n")])])]),a("p",[t._v("使用 JSBI 的一个优点是，一旦浏览器支持，就不需要重写代码。 相反，可以使用 babel 插件自动将 JSBI 代码编译为原生 BigInt 代码。")])]),a("h2",{attrs:{id:"string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型"}},[t._v("#")]),t._v(" String 类型")]),t._v(" "),a("h3",{attrs:{id:"string-对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-对象属性"}},[t._v("#")]),t._v(" String 对象属性")]),t._v(" "),a("h4",{attrs:{id:"_1-length-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-length-2"}},[t._v("#")]),t._v(" 1. length")]),t._v(" "),a("p",[t._v("功能： String 对象的 length 属性声明了该字符串中的字符串数")]),t._v(" "),a("h3",{attrs:{id:"string-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-对象方法"}},[t._v("#")]),t._v(" String 对象方法")]),t._v(" "),a("h4",{attrs:{id:"_1-charat-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-charat-index"}},[t._v("#")]),t._v(" 1."),a("code",[t._v("charAt(index)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 返回指定位置的字符")]),t._v(" "),a("li",[t._v("参数: index(必须), 为目标字符的下标位置")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("若参数 index 不在 0 与 string.length 之间,该方法将返回一个空字符串")])]),a("h4",{attrs:{id:"_2-charcodeat-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-charcodeat-index"}},[t._v("#")]),t._v(" 2."),a("code",[t._v("charCodeAt(index)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 返回在指定的位置的字符的 Unicode 编码")]),t._v(" "),a("li",[t._v("参数: index(必须),默认 0,为目标字符的下标位置")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("若 index 不在 0 与 string.length 之间,该方法将返回 NaN")])]),a("div",{staticClass:"custom-block theorem"},[a("p",{staticClass:"title"},[t._v("字符串操作")]),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @function isReserved 检测字符串是否以$或者_开头\n * @param {String} str\n **/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isReserved")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认0,不填好像也没事")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x5f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v('从传递进来的字母序列中找到缺失的字母并返回它。如：fearNotLetter("abce")应该返回“d”')]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fearNotLetter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block right"},[a("p",[t._v("["),a("a",{attrs:{href:"https://github.com/roger-hiro/BlogFN/blob/master/%E3%80%8C%E4%BB%8E%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E3%80%8DVue%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84JS%E9%AA%9A%E6%93%8D%E4%BD%9C.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("从源码中学习」Vue 源码中的 JS 骚操作"),a("OutboundLink")],1)])])]),a("h4",{attrs:{id:"_3-indexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-indexof"}},[t._v("#")]),t._v(" 3. "),a("code",[t._v("indexOf()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 检索字符串,返回指定子字符串在字符串中首次出现的位置。")]),t._v(" "),a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("参数 1：检索目标子字符串，必须")]),t._v(" "),a("li",[t._v("参数 2： 在字符串中开始检索的位置，可选。其合法取值是 0 到"),a("code",[t._v("stringObject.length - 1")]),t._v("。如省略该参数，则将从字符串的首字符开始检索")])])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("indexOf()方法对大小字母敏感\n如果要检索的字符串值没有出现,则该方法返回-1")])]),a("h4",{attrs:{id:"_4-lastindexof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-lastindexof"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("lastIndexOf()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 从后向前搜索字符串,返回指定字符串在字符串中首次出现的位置。")]),t._v(" "),a("li",[t._v("参数\n"),a("ul",[a("li",[t._v("参数 1：检索目标字符串(必须)")]),t._v(" "),a("li",[t._v("参数 2：在字符串中开始检索的位置(可选)，其合法取值是 0 到"),a("code",[t._v("stringObject.length - 1")]),t._v("。如省略该参数，则将从字符串的最后一个字符开始检索")])])])]),t._v(" "),a("h4",{attrs:{id:"_5-startswith-searchstring-position-endswith-searchstring-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-startswith-searchstring-position-endswith-searchstring-length"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("startsWith(searchString[,position])")]),t._v(" & "),a("code",[t._v("endsWith(searchString[,length])")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能: 判断当前字符串是否以另外一个给定的字符串开头/结尾")])]),t._v(" "),a("li",[a("p",[t._v("参数")]),t._v(" "),a("ul",[a("li",[t._v("参数 1: 检索目标字符串(必须)")]),t._v(" "),a("li",[t._v("参数 2: 在字符串中开头/结束检索的位置")])])])]),t._v(" "),a("h4",{attrs:{id:"_6-includes-searchstring-position"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-includes-searchstring-position"}},[t._v("#")]),t._v(" 6."),a("code",[t._v("includes(searchString[,position])")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能：字符串是否包含指定字符")])]),t._v(" "),a("li",[a("p",[t._v("参数:")]),t._v(" "),a("ul",[a("li",[t._v("包含指定值")]),t._v(" "),a("li",[t._v("(可选)搜索的起始索引，默认为 0")])])])]),t._v(" "),a("h4",{attrs:{id:"_7-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-match"}},[t._v("#")]),t._v(" 7. "),a("code",[t._v("match()")])]),t._v(" "),a("ul",[a("li",[t._v("功能：返回指定位置的字符")]),t._v(" "),a("li",[t._v("参数： 规定要检索的字符串值或待匹配的 RegExp 对象(必须)")]),t._v(" "),a("li",[t._v("返回值：存放匹配结果的数组。该数组的内容依赖于 RegExp 是否具有全局标志"),a("code",[t._v("g")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("提示")]),a("p",[t._v("如果 RegExp 没有标志 g,那么"),a("code",[t._v("match()")]),t._v("方法只能在 stringObject 中执行一次匹配。如果没有找到任何匹配的文本，"),a("code",[t._v("match()")]),t._v("将返回 null。否则，它将返回一个数组，其中存放了与它找到的匹配文本有关信息。该数组的第 0 个元素是匹配文本，而其余的元素存放的是与正则表达式的子表达式的文本。除了这些常规的数组元素之外，返回的数组还包含两个对象属性。index 属性声明的是匹配文本的其实自付在 stringObject 的位置，input 属性声明的是对 stringObject 的引用。"),a("br"),t._v("\n如果 RegExp 有标志 g，则"),a("code",[t._v("match()")]),t._v("方法将执行全局检索，找到 stringObject 中的所有匹配子字符串。若没有找到任何匹配的子串，则返回 null。如果找到了一个或多个匹配子串，则返回一个数组。不过全局匹配返回的数组的内容与前者大不相同，它的数组元素中存放的是 stringObject 中所有的匹配子串，而且也没有 index 属性或 input 属性")])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello21 world21"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2}")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['21',index:5,input: 'hello21 world21']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello21 world21"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d{2}")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['21','21']")]),t._v("\n")])])]),a("h4",{attrs:{id:"_8-matchall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-matchall"}},[t._v("#")]),t._v(" 8. "),a("code",[t._v("matchAll()")]),t._v(" "),a("Badge",{attrs:{text:"ES2020新增"}})],1),t._v(" "),a("ul",[a("li",[t._v("用于获取特定正则表达式的"),a("strong",[t._v("所有")]),t._v("匹配项(包括捕获组)")])]),t._v(" "),a("div",{staticClass:"language-JS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"climbing, oranges, jumping, flying, carrot"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("([a-z]*)ing")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// {value:["climbing", "climb", index: 0, input: "..."...],done:false}')]),t._v("\n")])])]),a("h4",{attrs:{id:"_9-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-replace"}},[t._v("#")]),t._v(" 9. "),a("code",[t._v("replace()")])]),t._v(" "),a("ul",[a("li",[t._v("功能：在字符串中用一些字符替换另一种字符，或替换一个与正则表达式匹配的子串")]),t._v(" "),a("li",[t._v("参数：\n"),a("ul",[a("li",[t._v("参数 1:regexp/subStr(必须),规定子字符串或要匹配的 RegExp 对象")]),t._v(" "),a("li",[t._v("参数 2:replacement(必须),用于替换的字符串值")])])]),t._v(" "),a("li",[t._v("返回值: 替换后的一个新字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hi world hello")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hi world hello")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hi world hi")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("replace 方法返回一个新字符串,并不会修改原字符串")])]),a("h4",{attrs:{id:"_9-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-search"}},[t._v("#")]),t._v(" 9. "),a("code",[t._v("search()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串")]),t._v(" "),a("li",[t._v("参数： regexp/subStr(必须),规定子字符串或要匹配的 RegExp 对象。")]),t._v(" "),a("li",[t._v("返回值: 原字符串中第一次匹配到目标字符串的起始位置")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("search()")]),t._v("方法不执行全局匹配，它将忽略标志 g。也就是说，它只匹配一次。若没有匹配到结果，则返回-1.")])]),a("h4",{attrs:{id:"_10-tolowercase-touppercase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-tolowercase-touppercase"}},[t._v("#")]),t._v(" 10. "),a("code",[t._v("toLowerCase()")]),t._v("&"),a("code",[t._v("toUpperCase()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 把字符串转换为小写/大写")]),t._v(" "),a("li",[t._v("返回值:一个新字符")])]),t._v(" "),a("h4",{attrs:{id:"_11-concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-concat"}},[t._v("#")]),t._v(" 11. "),a("code",[t._v("concat()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用于连接两个或多个字符串(不修改原字符串)")]),t._v(" "),a("li",[t._v("返回值: 衔接后的一个新字符串")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v('通常使用"+"运算符')])]),a("h4",{attrs:{id:"_12-padstart-targetlength-padstring-padend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-padstart-targetlength-padstring-padend"}},[t._v("#")]),t._v(" 12. "),a("code",[t._v("padStart(targetLength[,padString])")]),t._v(" & "),a("code",[t._v("padEnd()")])]),t._v(" "),a("ul",[a("li",[t._v("用另一个字符串填充当前字符串(可重复)")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("targetLength:当前字符串需要填充到的目标长度。如果这个数值小于当前字符串的长度，则返回当前字符串本身。")]),t._v(" "),a("li",[t._v('padString(可选):填充字符串。如果字符串太长，使填充后的字符串长度超过了目标长度，则只保留最左侧的部分，其他部分会被截断。此参数的缺省值为 " "（U+0020）。')])])])]),t._v(" "),a("h4",{attrs:{id:"_13-repeat-count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-repeat-count"}},[t._v("#")]),t._v(" 13. "),a("code",[t._v("repeat(count)")])]),t._v(" "),a("ul",[a("li",[t._v("重复 str 字符串 count 次")])]),t._v(" "),a("h4",{attrs:{id:"_14-trim-trimstart-trimend-trimleft-trimright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-trim-trimstart-trimend-trimleft-trimright"}},[t._v("#")]),t._v(" 14. "),a("code",[t._v("trim()")]),t._v(" & "),a("code",[t._v("trimStart()/trimEnd()")]),t._v(" & "),a("code",[t._v("trimLeft()/trimRight()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 返回去除两端、开头/末端、左/右端空格的新字符串")])]),t._v(" "),a("h4",{attrs:{id:"_15-split-separator-limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-split-separator-limit"}},[t._v("#")]),t._v(" 15. "),a("code",[t._v("split(separator[,limit])")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 用于把一个字符串分割成字符串数组,是"),a("code",[t._v("Array.join()")]),t._v("的逆操作")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("separator(必须),字符串或者正则表达式,从该参数指定的地方分割原字符串")]),t._v(" "),a("li",[t._v("limit(可选),指定返回数组的最大长度")])])]),t._v(" "),a("li",[t._v("返回值: 一个字符串数组")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi baby"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['h','i',' ','b','a','b','y']")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['hi',''baby']")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['hi','a','y']")]),t._v("\n")])])]),a("h4",{attrs:{id:"_16-slice-start-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-slice-start-end"}},[t._v("#")]),t._v(" 16. "),a("code",[t._v("slice(start[,end])")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 截取字符串的某个部分,以新的字符串返回被提取的部分")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("start(必须),截取的起始位置")]),t._v(" "),a("li",[t._v("end(可选),截取的结束位置")])])]),t._v(" "),a("li",[t._v("返回值: 截取部分, 一个新的字符串")])]),t._v(" "),a("h4",{attrs:{id:"_12-substr-start-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-substr-start-length"}},[t._v("#")]),t._v(" 12. "),a("code",[t._v("substr(start[,length])")]),a("Badge",{attrs:{text:"beta",type:"warning"}})],1),t._v(" "),a("ul",[a("li",[t._v("功能: 截取从指定下标开始的指定数目的字符")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("start(必须) 截取的起始位置, 接受负值")]),t._v(" "),a("li",[t._v("length(可选) 截取的字符串的长度,若未指定,则默认截取到原字符串的末尾。")])])]),t._v(" "),a("li",[t._v("返回值：截取部分，一个新的字符串")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"},[t._v("Notice")]),a("p",[t._v("ECMAScript 没有对该方法进行标准化,因此不建议使用它")])]),a("h4",{attrs:{id:"_13-substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-substring"}},[t._v("#")]),t._v(" 13. "),a("code",[t._v("substring()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 截取字符串中介于两个指定下标之间的字符")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("start(必须),截取的起始位置")]),t._v(" "),a("li",[t._v("end(可选),截取的结束位置,若未指定,则默认截取到原字符的末尾")])])]),t._v(" "),a("li",[t._v("返回值: 截取部分,一个新的字符串")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("Note")]),a("p",[t._v("与"),a("code",[t._v("slice()")]),t._v("和"),a("code",[t._v("substr()")]),t._v("方法不同的是,"),a("code",[t._v("substring")]),t._v("不接受负的参数")]),t._v(" "),a("p",[t._v("如果参数 start 与 stop 相等，那么该方法返回的一个空串, "),a("code",[t._v("slice()")]),t._v("与之相同")]),t._v(" "),a("p",[t._v("如果 start 比 end 大，那么该方法在提取子串之前会交换这两个参数，而"),a("code",[t._v("slice()")]),t._v("方法返回一个空字符串")])]),a("h2",{attrs:{id:"global-对象-全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global-对象-全局对象"}},[t._v("#")]),t._v(" Global 对象(全局对象)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("说明")]),a("p",[t._v("全局对象只是一个对象,而不是类。既没有构造函数，也无法实例化 一个新的全局函数")])]),a("h3",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("h4",{attrs:{id:"infinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#infinity"}},[t._v("#")]),t._v(" Infinity")]),t._v(" "),a("p",[t._v("代表正的无穷大的数值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Infinity")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7976931348623157e10308")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Infinity")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7976931348623157e10308")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-Infinity")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("Infinity 代表了超出 Javascript 处理范围的数值也就是说 JS 无法处理的数值是 Infinity")])]),a("h4",{attrs:{id:"nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" NaN")]),t._v(" "),a("p",[t._v("代表非数字的值")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("请使用"),a("code",[t._v("isNaN()")]),t._v("或"),a("code",[t._v("Object.is(NaN,obj)")]),t._v("方法来判断一个值是否是 NaN，原因是 NaN 与所有值都不相等，包括它自己")])]),a("h4",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),a("p",[t._v("代表未定义的值")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("判断一个变量是否定义,只能用"),a("code",[t._v("=== undefined")]),t._v("运算来测试，因为"),a("code",[t._v("undefined == null")]),a("br"),t._v("\nnull: 表示无值"),a("br"),t._v("\nundefined 表示一个未声明的变量,或已声明但没有赋值的变量,或一个并不存在的对象属性")])]),a("h3",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("h4",{attrs:{id:"_1-encodeuri-uristring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-encodeuri-uristring"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("encodeURI(URIString)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能: 将字符串作为 URI 进行编码, 返回值为 URIString 的副本")])]),t._v(" "),a("li",[a("p",[t._v("参数: URIString(必须): 一个待编码的字符串")])]),t._v(" "),a("li",[a("p",[t._v("该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码: "),a("code",[t._v("-_.!~*'()")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("该方法的目的是对 URI 进行完整的编码,因此对在 URI 中具有特殊含义的 ASCII 标点符号("),a("code",[t._v(";/?@&=+$,#")]),t._v("),是不会进行转义的")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("提示")]),a("p",[t._v("如果 URI 组件中含有分隔符, 比如?和#,则应当使用 encodeURIComponent()方法分别对各组件进行编码")])]),a("h4",{attrs:{id:"_2-encodeuricomponent-uristring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-encodeuricomponent-uristring"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("encodeURIComponent(URIString)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("功能: 将字符串作为 URI 组件进行编码, 返回值为 URIString 的副本")])]),t._v(" "),a("li",[a("p",[t._v("参数: URIString(必须): 一个待编码的字符串")])]),t._v(" "),a("li",[a("p",[t._v("该方法不会对 ASCII 字母和数字进行编码，也不会对这些 ASCII 标点符号进行编码: "),a("code",[t._v("-_.!~*'()")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("其他字符(比如: "),a("code",[t._v(";/?:@&=+$,#")]),t._v("这些用于分隔 URI 组件的标点符号），都是由一个或多个十六进制的转义序列替换的。")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[a("code",[t._v("encodeURI()")]),t._v("和"),a("code",[t._v("encodeURIComponent()")]),t._v("的区别:\n他们都是编码 URI,唯一区别就是编码的字符范围。"),a("br"),t._v(" "),a("code",[t._v("encodeURI()")]),t._v("不会对下列字符 ASCII 字母、数字、"),a("code",[t._v("~!@#$&*()=:/,;?+'")]),t._v(", "),a("br"),t._v(" "),a("code",[t._v("encodeURIComponent()")]),t._v("方法不会对下列字符编码 ASCII 字母、数字、"),a("code",[t._v("~!*()'")]),t._v(", "),a("br"),t._v("\n所以 encodeURIComponent 比 encodeURI 编码的范围更大。"),a("br"),t._v("\n但按实例来说，encodeURIComponent 会把"),a("code",[t._v("http://")]),t._v("编码为"),a("code",[t._v("http%3A%2F%2F")]),t._v("而 encode 却不会")])]),a("ul",[a("li",[t._v("使用场景:")]),t._v(" "),a("li",[t._v("当你需要编码整个 URL，然后使用这个 URL，则使用 encodeURI。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/home/some other thing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编码后为：http://www.baidu.com/home/some%20other%20thing; 其中，空格被编码成了%20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//但是如果你用了encodeURIComponent")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/home/some other thing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// http%3A%2F%2Fwww.baidu.com%2Fhome%2Fsome%20other%20thing 连 "/" 都被编码了，整个URL已经没法用了')]),t._v("\n")])])]),a("ul",[a("li",[t._v("当你需要编码 URL 中的参数时,那么使用"),a("code",[t._v("encodeURIComponent()")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" param "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/home/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//param为参数")]),t._v("\nparam "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com?next="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" param"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'http://www.baidu.com?next=http%3A%2F%2Fwww.baidu.com%2Fhome%2F'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//显然，参数中的 "/" 被编码了，而如果用encodeURI肯定要出问题，因为后面的/是需要编码的。')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("补充")]),a("p",[t._v("与此同时, "),a("code",[t._v("decodeURI()")]),t._v("和"),a("code",[t._v("decodeURIComponent()")]),t._v("是用来解码的,逆向操作")])]),a("h4",{attrs:{id:"_3-parseint-string-radix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-parseint-string-radix"}},[t._v("#")]),t._v(" 3."),a("code",[t._v("parseInt(string,radix)")])]),t._v(" "),a("ul",[a("li",[t._v("功能:解析一个字符串,并返回一个整数")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("string(必须): 待解析的字符串")]),t._v(" "),a("li",[t._v("radix(可选): 表示要解析的数字的基数。该值介于 2~36 之间。\n如果省略该参数或者其值为 0，则数字以 10 为基础来解析。如果它以'0x'或'0X'开头,将以 16 为基数\n如果该参数小于 2 或大于 36，则将返回 NaN")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10 (9+1)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 (2+1)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"17"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//15 (8+7)")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x0011"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//17")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-parsefloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-parsefloat"}},[t._v("#")]),t._v(" 4. "),a("code",[t._v("parseFloat()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 解析一个字符串, 并返回一个浮点数。该函数指定字符串中的某个字符是否为数字。如果是，则对字符串进行解析，直到达到数字的末端为止")]),t._v(" "),a("li",[t._v("参数：String（必须），待解析的字符串")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.33"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10.33")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 60 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//60 首尾的空格会忽略")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23 34 45"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//23 中间的空格不会忽略，会中断")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23 years"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//23")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"i am 23"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v("开头和结尾的空格是允许的。如果字符串的第一个字符不能转换为数字，那么"),a("code",[t._v("parseFloat()")]),t._v("会返回 NaN 如果只想解析数字的整数部分,请使用"),a("code",[t._v("parseInt()")]),t._v("方法。")])]),a("h4",{attrs:{id:"_5-isfinite-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-isfinite-number"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("isFinite(number)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 检查参数是否为无穷大")]),t._v(" "),a("li",[t._v("参数:\n"),a("ul",[a("li",[t._v("number(必须): 待检测数字。\n如果 NaN、正、负无穷大的数、返回 false")])])])]),t._v(" "),a("h4",{attrs:{id:"_6-isnan-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-isnan-number"}},[t._v("#")]),t._v(" 6. "),a("code",[t._v("isNaN(number)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 检测其参数是否为非数字值")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("提示")]),a("p",[a("code",[t._v("isNaN()")]),t._v("函数通常用来检测"),a("code",[t._v("parseFloat()")]),t._v("和"),a("code",[t._v("parseInt")]),t._v("的结果, 以判断它们表示的是否是合法的数字。当然也可以用"),a("code",[t._v("isNaN()")]),t._v("函数来检测算数错误。")])]),a("h4",{attrs:{id:"_7-number-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-number-object"}},[t._v("#")]),t._v(" 7. "),a("code",[t._v("Number(object)")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 把对象的值转换成数字")]),t._v(" "),a("li",[t._v("参数: object(必须): 待转换对象。\n如果参数是 Date 对象，"),a("code",[t._v("Number()")]),t._v("返回从 1970 年 1 月 1 日至今的毫秒数，即时间戳。如果对象的值无法转换为数字，那么 Number() 函数返回 NaN。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1586553414703")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'999'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 999")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'999 888'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n")])])]),a("h4",{attrs:{id:"_8-不常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-不常用方法"}},[t._v("#")]),t._v(" 8. 不常用方法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("toString()")]),t._v(": 将数字转换成字符串("),a("strong",[t._v("返回 String 类型")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("toExponential()")]),t._v(": 可选计数("),a("strong",[t._v("返回 String 类型")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("toFixed()")]),t._v(": 保留小数("),a("strong",[t._v("返回 String 类型")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("toPrecision()")]),t._v(": 指定数组长度("),a("strong",[t._v("返回 String 类型")]),t._v(")")])]),t._v(" "),a("h2",{attrs:{id:"math-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math-对象"}},[t._v("#")]),t._v(" Math 对象")]),t._v(" "),a("p",[t._v("常用方法:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Math.abs()")]),t._v(": 取绝对值")]),t._v(" "),a("li",[a("code",[t._v("Math.ceil()")]),t._v(": 向上取整")]),t._v(" "),a("li",[a("code",[t._v("Math.floor()")]),t._v(": 向下取整")]),t._v(" "),a("li",[a("code",[t._v("Math.round()")]),t._v(": 四舍五入取整")]),t._v(" "),a("li",[a("code",[t._v("Math.random()")]),t._v(": 生成 0~1 间的随机数(>0)")]),t._v(" "),a("li",[a("code",[t._v("Math.max(x,y)")]),t._v(": 取 x、y 中较大的那个")]),t._v(" "),a("li",[a("code",[t._v("Math.min(x,y)")]),t._v(": 取 x、y 中较小的那个")])]),t._v(" "),a("h2",{attrs:{id:"json-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-对象"}},[t._v("#")]),t._v(" JSON 对象")]),t._v(" "),a("p",[t._v("我们常说的对象字面量其实不是 JSON 对象, 但是有真正的 JSON 对象。")]),t._v(" "),a("p",[t._v("两者完全不一样概念，在新版的浏览器里 JSON 对象已经被原生的内置对象了，目前有 2 个静态方法：JSON.parse 用来将 JSON 字符串反序列化成对象，JSON.stringify 用来将对象序列化成 JSON 字符串。")]),t._v(" "),a("p",[t._v("老版本的浏览器不支持这个对象，但你可以通过 json2.js 来实现同样的功能。")]),t._v(" "),a("h3",{attrs:{id:"json-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-对象方法"}},[t._v("#")]),t._v(" JSON 对象方法")]),t._v(" "),a("h4",{attrs:{id:"_1-json-parse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-json-parse"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("JSON.parse()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 将 JSON 字符串反序列化为对象")]),t._v(" "),a("li",[t._v("参数: JSON 字符串")]),t._v(" "),a("li",[t._v("返回值: 对象")])]),t._v(" "),a("h4",{attrs:{id:"_2-json-stringify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-json-stringify"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("JSON.stringify()")])]),t._v(" "),a("ul",[a("li",[t._v("功能: 将一个对象解析为 JSON 字符串")]),t._v(" "),a("li",[t._v("参数: 对象")]),t._v(" "),a("li",[t._v("返回值: JSON 字符串")])]),t._v(" "),a("hr"),t._v("\nAPI催眠功能显著，这就是JavaScript的乐趣吗?i了i了\n")])}),[],!1,null,null,null);s.default=e.exports}}]);